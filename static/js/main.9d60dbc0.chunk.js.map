{"version":3,"sources":["lib/gameTypes/general/main.js","lib/gameTypes/rage/main.js","lib/gameTypes/gameTypes.js","lib/store/store.js","lib/players/player.js","game/now/ranglist.js","game/now/scoreChart.js","game/now/scoreSummary.js","game/now/view.js","lib/players/players.js","lib/game/game.js","game/new/view.js","game/new/create.js","lib/game/games.js","game/all/view.js","game/all/open.js","lib/history/history.js","player/bestlist/view.js","player/bestlist/open.js","main/view.js","App.js","serviceWorker.js","index.js","lib/store/updater.js"],"names":["GameGeneralMain","name","key","scoreMax","inputScore","delaerNow","players","round","length","playerIndex","this","getDealer","dealer","parseInt","document","getElementById","value","errors","isNaN","settings","obj","player","calculateSum","rangList","newRang","sum","i","splice","className","style","paddingRight","width","textAlign","fontWeight","id","score","parseFloat","_input","select","placeholder","string","onChange","event","target","game","winner","gameType","getRanglist","winnerIndex","push","shift","newName","split","gameNumber","slice","gameName","join","status","start","Date","end","store","GameRageMain","stichSay","stichIs","bonus","inputStichSay","React","createRef","inputStichIs","inputBonus","partStichIs","partBonus","current","display","type","calc","onClick","handleStiche","icon","ref","readOnly","clear","handleBonus","rowSpan","GameTypes","games","GameType1","GameType2","form","forEach","gameNames","Store","save","dataStore","data","JSON","parse","window","localStorage","getItem","lid","setItem","stringify","restoreAll","entry","index","Player","scoreRangHistory","restoreById","Object","keys","rangs","history","rang","gameTypes","includes","Ranglist","props","fxProps","count","interval","colors","x","innerWidth","y","Math","random","state","render","renderData","classMedal","height","innerHeight","renderList","Component","ScoreChart","chartData","chartItem","displayRound","add","displayScoreNumber","color","floor","dataKey","stroke","getRandomColor","generateChartData","margin","top","right","left","bottom","background","marginTop","strokeDasharray","renderChart","ScoreSummary","show","title","refVar","size","setState","ons","require","GameNowView","scoreUpdate","ranglistShow","dialogScoreEdit","windowChange","dialogRepeat","beginner","playerNext","roundNow","repeat","scoreTBody","divSummary","windowHeight","querySelector","open","storeScoreForm","isGameFinish","handleChangeScore","loadScoreForm","indexOf","nextPlayerIndexByIndex","getBeginner","focusScoreForm","finishing","defaultScore","repeatGame","contains","addEventListener","updateDimensions","bind","removeEventListener","scrollHeight","scrollWidth","platform","isIPhoneX","renderLoop","displayName","renderBody","j","class","styleClass","isDealer","verticalAlign","e","displayScore","displaySum","roundButton","handleNewGame","handleAddRound","modifier","isOpen","onCancel","handleCloseScore","displayScoreForm","handleNewScore","animation","handleRanglistClose","handleMenuClick","renderScore","paddingTop","handleRangList","Players","indexNow","nextPlayerByIndex","nextPlayerIndex","nextPlayerIndexByPlayer","playerInstance","getPlayersFromStorage","Game","stored","storeObj","gameTypeSettings","getSettings","mapper","getGameType","setSettings","addPlayer","restore","ranglist","ts","GameNewView","dialogPlayer","newPlayerName","editPlayer","notificationShow","sort","notification","playerSearch","getPlayerByName","playerList","timeout","setTimeout","context","storeSettings","errorsOptional","checkSettings","assign","navigator","pushPage","component","htmlErros","body","_gestureDetector","dispose","availableGameTypes","gameTypeKey","displayCreateOptions","list","setList","newPlayers","map","handlePlayerDelete","found","charAt","handlePlayerAddFromDB","renderPlayerList","handlePlayerAdd","fontSize","handleGameTypeSelect","renderGameTypes","renderOptionals","float","padding","handlePlayersEdit","renderPlayers","handlePlayerDialog","handleGameCreate","GameNewCreate","page","handleOnClick","Games","loadAllGames","deleteById","reverse","gameInstance","GameAllView","editGames","gamesCnt","date","addZero","getDate","getMonth","getFullYear","getHours","getMinutes","number","listItemsNew","listItemsRun","listItemsFinish","tappable","handleViewGame","formateDate","concat","renderGames","GameAllOpen","History","ranglistByTimerangeAndGametype","gametype","ranglists","_sortWinners","_parseWinners","winners","winnerFound","cnt","bestlist","PlayerBestlistView","filterGameType","filterStart","filterEnd","inputFilterStart","inputFilterEnd","console","log","arrangedPlayers","getPlayedGameTypes","rangFirst","getRangsByGameTypeKey","playersHistory","arrangePlayer","renderTypes","DateButton","readonly","setOpen","showTimeSelect","selected","maxDate","dateFormat","customInput","withPortal","renderFilterSettings","PlayerBestlistOpen","MainView","App","close","route","createElement","html","documentElement","setAttribute","side","collapse","handleMenu","packageJson","version","buildNumber","build","initialRoute","renderPage","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","storeVersion","init","ReactDOM","StrictMode","URL","process","href","origin","fetch","headers","response","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9d60dbc0.chunk.js","sourcesContent":["import React from 'react';\nimport {ListItem, Input} from 'react-onsenui';\n\nclass GameGeneralMain {\n    name = \"Allgemein\";\n    key = \"general\";\n    scoreMax = 0;\n    inputScore = '';\n    delaerNow = 0;\n\n\n    getDealer(players, round) {\n        return round % players.length;\n    }\n    isDealer(players, round, playerIndex) {\n        if(playerIndex === this.getDealer(players, round)) {\n            return true;\n        }\n        return false;\n    }\n    \n    getBeginner(players, round) {\n        let dealer = this.getDealer(players, round);\n        dealer++;\n        if(players.length <= dealer) {\n            return 0;\n        }\n        return dealer;\n    }\n\n    defaultScore() {\n        return 0;\n    }\n\n    storeSettings() {\n        this.scoreMax = parseInt(document.getElementById('scoreMax').value);\n    }\n\n    checkSettings() {\n        let errors = {};\n        if(this.scoreMax === 0 || isNaN(this.scoreMax)) {\n            errors.scoreMax = \"Keine Gesamtpunktzahl angeben\";\n        }\n        return errors;\n    }\n\n    setSettings(settings) {\n        this.scoreMax = settings.scoreMax;\n    }\n\n    getSettings() {\n        let obj = {};\n        obj.scoreMax = this.scoreMax;\n\n        return obj;\n    }\n\n    isGameFinish(players) {\n        for(let player of players) {\n            if(this.calculateSum(player) >= this.scoreMax) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    getRanglist(players) {\n        let rangList = [];\n        for(let player of players) {\n            let newRang = {player: player, sum: this.calculateSum(player)};\n            let i = 0;\n            while(i < rangList.length) {\n                if(rangList[i].sum < newRang.sum) {\n                    break;\n                }\n                i++;\n            }\n            rangList.splice(i, 0, newRang);\n        }\n        return rangList;\n    }\n\n    displayCreateOptions() {\n        return (\n            <ListItem>\n                <div className=\"center\">\n                    <label style={{paddingRight: '10px', width: '35%', textAlign: 'left', fontWeight: 'bold'}}>Maximale Punktzahl: </label>\n                    <Input id=\"scoreMax\"\n                        style={{width: '60%'}}/>\n                </div>\n            </ListItem>\n        );\n    }\n\n    loadScoreForm(player, round) {\n        this.inputScore = player.score[round];\n    }\n    \n    storeScoreForm() {\n        return parseFloat(this.inputScore);\n    }\n\n    focusScoreForm() {\n        document.getElementById(\"formScore\")._input.select();\n    }\n\n    displayScoreForm() {\n        return (\n            <>\n                <label style={{textAlign: 'right', fontWeight: 'bold'}}>Punktestand: </label>\n                <Input id=\"formScore\" \n                        placeholder='Punktestand' \n                        value={this.inputScore} string\n                        onChange={(event) => { this.inputScore = event.target.value }}\n                />\n            </>\n        );\n    }\n\n    displayScore(score) {\n        return score;\n    }\n\n    displayRound(round) {\n        return (round+1);\n    }\n\n    displayScoreNumber(score) {\n        return score;\n    }\n\n    calculateSum(player) {\n        let sum = 0;\n        for(let score of player.score) {\n            sum = sum + score;\n        }\n        return sum;\n    }\n\n    displaySum(player) {\n        return this.calculateSum(player);\n    }\n\n    repeatGame(game) {\n        let players = game.players.players;\n        let winner = game.gameType.getRanglist(game.players.players)[0];\n        let winnerIndex = 0;\n        for(let i=0; i<players.length; i++) {\n            if(players[i] === winner.player) {\n                winnerIndex = i;\n            }\n            game.players.players[i].score = [];\n        }\n        for(let i=0; i<winnerIndex; i++) {\n            players.push(players.shift());\n        }\n        let newName = game.name.split(\"#\");\n        let gameNumber = parseInt(newName.slice(-1));\n        if(isNaN(gameNumber)) {\n            gameNumber = 1;\n        }\n        let gameName = newName.join(\"#\")+\" \";\n        if(newName.length > 1) {\n            gameName = newName.slice(0, -1).join('#');\n        }\n        game.name = gameName + '#'+(++gameNumber); \n        game.round = 0;\n        game.status = \"CREATE\"\n        game.id = -1;\n        game.start = new Date();\n        game.end = null;\n        game.store();\n        return game;\n    }\n    \n}\n\nexport default GameGeneralMain;","import React from 'react';\nimport {Icon} from 'react-onsenui';\n\nimport GameGeneralMain from \"../general/main\";\nimport './style.css';\n\nclass GameRageMain extends GameGeneralMain {\n    name = \"Rage\";\n    key = \"rage\";\n    inputScore = {stichSay: null, stichIs: null, bonus: null, round: 0};\n\n    constructor() {\n        super();\n        this.inputStichSay = React.createRef();\n        this.inputStichIs = React.createRef();\n        this.inputBonus = React.createRef();\n        this.partStichIs = React.createRef();\n        this.partBonus = React.createRef();\n    }\n    \n    defaultScore() {\n        return {stichSay: null, stichIs: null, bonus: null, score: null};\n    }\n\n    storeSettings() {\n    }\n\n    checkSettings() {\n        return {};\n    }\n\n    setSettings(settings) {\n    }\n\n    getSettings() {\n        return {};\n    }\n\n    isGameFinish(players) {\n        if(players[0].score.length === 10) {\n            return true\n        }\n        return false;\n    }\n\n    displayCreateOptions() {\n        return \"\";\n    }\n\n    loadScoreForm(player, round) {\n        this.partStichIs.current.style.display = \"none\";\n        this.partBonus.current.style.display = \"none\";\n        this.inputScore.stichSay = player.score[round].stichSay;\n        if(isNaN(this.inputScore.stichSay) || this.inputScore.stichSay === null) {\n            this.inputScore.stichSay = 0;\n        } else {\n            this.partStichIs.current.style.display = \"block\";\n        }\n        this.inputStichSay.current.value = this.inputScore.stichSay;\n\n        this.inputScore.stichIs = player.score[round].stichIs;\n        if(isNaN(this.inputScore.stichIs) || this.inputScore.stichIs === null) {\n            this.inputStichIs.current.value = 0;\n            if(!isNaN(player.score[round].stichSay) && player.score[round].stichSay !== null) {\n                this.inputScore.stichIs = 0;\n            }\n        } else {\n            this.inputStichIs.current.value = this.inputScore.stichIs;\n            if(this.inputScore.stichIs > 0) {\n                this.partBonus.current.style.display = \"block\";\n            }\n        }\n\n        this.inputScore.bonus = player.score[round].bonus;\n        if(isNaN(this.inputScore.bonus) || this.inputScore.bonus === null) {\n            this.inputBonus.current.value = 0;\n        } else {\n            this.inputBonus.current.value = this.inputScore.bonus;\n        }\n        \n        this.inputScore.round = (10-round);\n    }\n    \n    storeScoreForm() {\n        let score = null;\n        if(!isNaN(this.inputScore.stichIs) && this.inputScore.stichIs !== null) {\n            if(this.inputScore.stichSay === this.inputScore.stichIs) {\n                score = score + 10;\n            } else {\n                score = score - 5;\n            }\n            score = score + this.inputScore.stichIs;\n            if(!isNaN(this.inputScore.bonus) && this.inputScore.bonus !== null) {\n                score = score + this.inputScore.bonus;\n            }\n        }\n\n        return {score: score, stichSay: this.inputScore.stichSay, stichIs: this.inputScore.stichIs, bonus: this.inputScore.bonus};\n    }\n\n    focusScoreForm() {\n    }\n\n    handleStiche(type, calc) {\n        let value = 0;\n        switch(type) {\n            case \"SAY\":\n                if(!isNaN(this.inputScore.stichSay)) {\n                    value = this.inputScore.stichSay;\n                }\n                break;\n            case \"IS\":\n                if(!isNaN(this.inputScore.stichIs)) {\n                    value = this.inputScore.stichIs;\n                }\n                break;\n            default:\n                return;\n        }\n\n        if(calc === \"DEC\") {\n            value--;\n        } else {\n            value++;\n        }\n        if(value < 0) {\n            value = 0;\n        } else if(value > this.inputScore.round) {\n            value = this.inputScore.round;\n        }\n\n        switch(type) {\n            case \"SAY\":\n                this.inputScore.stichSay = value;\n                this.inputStichSay.current.value = value;\n                break;\n            case \"IS\":\n                this.inputScore.stichIs = value;\n                this.inputStichIs.current.value = value;\n                break;\n            default:\n                return;\n        }\n\n        if(!isNaN(this.inputScore.stichSay) && this.inputScore.stichSay !== null) {\n            this.partStichIs.current.style.display = \"block\";\n        }\n\n        if(this.inputScore.stichIs > 0) {\n            this.partBonus.current.style.display = \"block\";\n        } else {\n            this.partBonus.current.style.display = \"none\";\n        }\n    }\n\n    handleBonus(calc) {\n        let value = this.inputScore.bonus;\n        if(calc === \"DEC\") {\n            value = value - 5;\n        } else {\n            value = value + 5;\n        }\n        this.inputScore.bonus = value;\n        this.inputBonus.current.value = value;\n    }\n\n    displayScoreForm() {\n        return (\n            <>\n                <label style={{textAlign: 'right', fontWeight: 'bold'}}>Stiche soll</label>\n                <div className=\"formRageDecInc\">\n                    <button className=\"formRageDec\" onClick={() => this.handleStiche(\"SAY\",\"DEC\")}>\n                        <Icon icon=\"md-minus\"></Icon>\n                    </button>\n                    <input className=\"formRageView\" ref={this.inputStichSay} readOnly></input>\n                    <button className=\"formRageInc\" onClick={() => this.handleStiche(\"SAY\",\"INC\")}>\n                        <Icon icon=\"md-plus\"></Icon>\n                    </button>\n                    <div style={{clear: \"both\"}}></div>\n                </div>\n                <div ref={this.partStichIs}>\n                    <label style={{textAlign: 'right', fontWeight: 'bold'}}>Stiche ist</label>\n                    <div className=\"formRageDecInc\">\n                        <button className=\"formRageDec\" onClick={() => this.handleStiche(\"IS\",\"DEC\")}>\n                            <Icon icon=\"md-minus\"></Icon>\n                        </button>\n                        <input className=\"formRageView\" ref={this.inputStichIs}readOnly></input>\n                        <button className=\"formRageInc\" onClick={() => this.handleStiche(\"IS\",\"INC\")}>\n                            <Icon icon=\"md-plus\"></Icon>\n                        </button>\n                        <div style={{clear: \"both\"}}></div>\n                    </div>\n                </div>\n                <div ref={this.partBonus}>\n                    <label style={{textAlign: 'right', fontWeight: 'bold'}}>Bonus</label>\n                    <div className=\"formRageDecInc\">\n                        <button className=\"formRageDec\" onClick={() => this.handleBonus(\"DEC\")}>\n                            <Icon icon=\"md-minus\"></Icon>\n                        </button>\n                        <input className=\"formRageView\" ref={this.inputBonus} readOnly></input>\n                        <button className=\"formRageInc\" onClick={() => this.handleBonus(\"INC\")}>\n                            <Icon icon=\"md-plus\"></Icon>\n                        </button>\n                        <div style={{clear: \"both\"}}></div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n\n    displayScore(score) {\n        return (\n            <table className=\"gameRageTable\">\n                <tr>\n                    <td rowSpan=\"2\">{isNaN(score.stichIs) ? \"-\" : score.score}</td>\n                    <td>{isNaN(score.stichSay) || score.stichSay == null ? \"-\" : score.stichSay}</td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>{isNaN(score.stichIs) || score.stichIs == null ? \"-\" : score.stichIs}</td>\n                    <td>{isNaN(score.bonus) || score.bonus == null ? \"-\" : score.bonus}</td>\n                </tr>\n            </table>\n        );\n    }\n\n    displayScoreNumber(score) {\n        return score.score;\n    }\n\n    displayRound(round) {\n        return (10-round);\n    }\n\n    calculateSum(player) {\n        let sum = 0;\n        for(let score of player.score) {\n            if(!isNaN(score.score)) {\n                sum = sum + score.score;\n            }\n        }\n        return sum;\n    }\n    \n}\n\nexport default GameRageMain;","import GameType1 from './general/main.js';\nimport GameType2 from './rage/main.js';\n\nclass GameTypes {\n\n    constructor() {\n        this.games = [];\n        this.games.push(new GameType1());\n        this.games.push(new GameType2());\n    }\n\n    setForm(form) {\n        this.games.forEach(function(game) {\n            game.form = form;\n        });\n    }\n\n    getGameType(key) {\n        for(let game of this.games) {\n            if (game.key === key) {\n                return game;\n            }\n        }\n    }\n\n    availableGameTypes() {\n        let gameNames = {};\n        this.games.forEach(function(game) {\n            gameNames[game.key] = game.name;\n        });\n        return gameNames;\n    }\n}\n\nexport default GameTypes;","\n\nclass Store {\n\n    constructor(save) {\n        this.save = save;\n\n    }\n\n    store(dataStore) {\n        let data = JSON.parse(window.localStorage.getItem(this.save));\n        if(typeof data !== 'object' || data === null) {\n            dataStore.id = this.id = 0;\n            data = {lid: dataStore.id, data: [dataStore]};\n        } else if(dataStore.id === -1) {\n            dataStore.id = this.id = ++data.lid;\n            data.data.push(dataStore); \n        } else {\n            for(let i = 0; i<data.data.length; i++) {\n                if(dataStore.id === data.data[i].id) {\n                    data.data[i] = dataStore;\n                    break;\n                }\n            }\n        }\n        window.localStorage.setItem(this.save, JSON.stringify(data));\n        return dataStore.id;\n    }\n\n    restoreAll() {\n        let data = JSON.parse(window.localStorage.getItem(this.save));\n        if(typeof data !== 'object' || data === null) {\n            return [];\n        }\n        return data.data;\n    }\n\n    restoreById(id) {\n        let data = this.restoreAll();\n        for(let entry of data) {\n            if(entry.id === id) {\n                return entry;\n            }\n        }\n        return {};\n    }\n\n    deleteById(id) {\n        let data = JSON.parse(window.localStorage.getItem(this.save));\n        if(typeof data !== 'object' || data === null) {\n            return false;\n        }\n        let index = 0;\n        for(let entry of data.data) {\n            if(entry.id === id) {\n                break;\n            }\n            index++;\n        }\n        if(index < data.data.length) {\n            data.data.splice(index, 1);\n        }\n        window.localStorage.setItem(this.save, JSON.stringify(data));\n        return true;\n    }\n}\n\nexport default Store;","import Store from \"../store/store\";\n\n\nclass Player {\n    constructor(name) {\n        this.id = -1;\n        this.name = name;\n        this.score = [];\n        this.scoreRangHistory = [];\n    }\n\n    store() {\n        let store = new Store(\"players\");\n        let id = store.store({id: this.id, name: this.name, scoreRangHistory: this.scoreRangHistory});\n        this.id = id;\n    }\n\n    restore() {\n        let store = new Store(\"players\");\n        let data = store.restoreById(this.id);\n        if(Object.keys(data) === 0) {\n            return false;\n        }\n        this.name = data.name;\n        this.scoreRangHistory = data.scoreRangHistory;\n        return true;\n    }\n\n    getRangsByGameTypeKey(gameType) {\n        let rangs = [];\n        for(let history of this.scoreRangHistory) {\n            if(history.gameType === gameType) {\n                rangs.push(history.rang);\n            }\n        }\n        return rangs;\n    }\n\n    getPlayedGameTypes() {\n        let gameTypes = [];\n        for(let history of this.scoreRangHistory) {\n            if(!gameTypes.includes(history.gameType)) {\n                gameTypes.push(history.gameType);\n            }\n        }\n        return gameTypes;\n    }\n\n    displayName() {\n        return (\n            this.name\n        );\n    }\n}\n\nexport default Player;","import React from \"react\";\n\n\n\n\n\nclass Ranglist extends React.Component {\n    fxProps = {\n        count: 4,\n        interval: 800,\n        colors: ['#cc3333', '#4CAF50', '#81C784', '#fcba03', '#2607db'],\n        calc: (props, i) => ({\n          ...props,\n          x: (i + 1) * (window.innerWidth / 3) - (i + 1) * 100,\n          y: 200 + Math.random() * 100 - 50 + (i === 2 ? -80 : 0)\n        })\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.game = props.game;\n    }\n\n\n\n    renderList() {\n        let width = window.innerWidth*0.9;\n        let render = [];\n        let i = 1;\n        render.push(\n            <thead>\n                <tr>\n                    <th className=\"ranglisteHead\" style={{width: (width*0.2)+\"px\"}}>Platz</th>\n                    <th className=\"ranglisteHead\" style={{width: (width*0.6)+\"px\"}}>Name</th>\n                    <th className=\"ranglisteHead\" style={{width: (width*0.2)+\"px\"}}>Punkte</th>\n                </tr>\n            </thead>\n        );\n        let renderData = [];\n        for(let rang of this.game.gameType.getRanglist(this.game.players.players)) {\n            let classMedal = \"\";\n            switch(i) {\n                case 1:\n                    classMedal = \"medalFirst\";\n                    break;\n                case 2:\n                    classMedal = \"medalSecond\";\n                    break;\n                case 3:\n                    classMedal = \"medalThird\";\n                    break;\n                default:\n                    break;\n            }\n            renderData.push(\n                <tr>\n                    <td style={{width: (width*0.2)+\"px\"}}><div className={\"rangMedal \" + classMedal}>{i}.</div></td>\n                    <td style={{width: (width*0.6)+\"px\"}}>{rang.player.name}</td>\n                    <td style={{width: (width*0.2)+\"px\"}}>{rang.sum}</td>\n                </tr>\n            );\n            i++;\n        }\n        render.push(<tbody style={{height: (window.innerHeight-200)+\"px\"}}>{renderData}</tbody>);\n        return render;\n    }\n\n    render() {\n        return (\n            <>\n                <table id=\"rangliste\" className=\"rangliste\">\n                    {this.renderList()}\n                </table>\n            </>\n        );\n    }\n}\n\nexport default Ranglist;","import React from \"react\";\n\nimport {LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\n\n\n\nclass ScoreChart extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.game = props.game;\n    }\n\n    generateChartData() {\n        this.chartData = [];\n        if(this.game.round > 0) {\n            for(let round = 0; round < this.game.round; round++) {\n                let chartItem = {round: this.game.gameType.displayRound(round)};\n                for(let player of this.game.players.players) {\n                    let add = 0;\n                    if(round > 0) {\n                        add = this.chartData[round-1][player.name];\n                    }\n                    chartItem[player.name] = this.game.gameType.displayScoreNumber(player.score[round])+add;\n                }\n                this.chartData.push(chartItem);\n            }\n        }\n    }\n\n    getRandomColor() {\n        var letters = '0123456789ABCDEF';\n        var color = '#';\n        for (var i = 0; i < 6; i++) {\n          color += letters[Math.floor(Math.random() * 16)];\n        }\n        return color;\n    }\n\n    renderChart() {\n        let render = [];\n        for(let player of this.game.players.players) {\n            render.push(<Line type=\"monotone\" dataKey={player.name} stroke={this.getRandomColor()} />);\n        }\n\n        return render;\n    }\n\n    render() {\n        this.generateChartData();\n        return (\n            <LineChart width={window.innerWidth*90/100} height={window.innerHeight-250} data={this.chartData}\n                        margin={{top: 5, right: 30, left: 20, bottom: 5}} style={{background: \"#3e3e3f\", marginTop: \"10px\"}}>\n                <XAxis dataKey=\"round\"/>\n                <YAxis/>\n                <CartesianGrid strokeDasharray=\"1 5\"/>\n                <Tooltip/>\n                <Legend />\n                {this.renderChart()}\n            </LineChart>\n        );\n    }\n}\n\nexport default ScoreChart;","import React from 'react';\nimport Ranglist from './ranglist';\nimport ScoreChart from './scoreChart';\nimport { Icon } from 'react-onsenui';\n\n\n\nclass ScoreSummary extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.game = props.game;\n        this.state = {show: \"RANGLIST\"};\n    }\n\n    render() {\n        let title = \"\";\n        let show = null;\n        switch(this.state.show) {\n            default:\n            case \"RANGLIST\":\n                title = \"Ranglist\";\n                show = (\n                    <Ranglist game={this.game}></Ranglist>\n                );\n            break;\n            case \"CHART\":\n                title = \"Punkteverlauf\";\n                show = (\n                    <ScoreChart game={this.game}></ScoreChart>\n                );\n                break;\n        }\n\n        return (\n            <div className=\"scoreSummary\" ref={this.props.refVar}>\n                <div className=\"scoreSummaryHead\">\n                    {title}\n                </div>\n                <div className=\"scoreSummaryContent\">\n                    {show}\n                </div>\n                <div className=\"scoreSummaryFooter\">\n                    <ul>\n                        <li>\n                            <Icon icon=\"md-view-list\" size={32} onClick={() => this.setState({show: \"RANGLIST\"})}></Icon>\n                        </li>\n                        <li>\n                            <Icon icon=\"md-equalizer\" size={32} onClick={() => this.setState({show: \"CHART\"})}></Icon>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ScoreSummary;","import React from 'react';\n\nimport {Toolbar, ToolbarButton, BottomToolbar, Icon, AlertDialog, Modal} from 'react-onsenui';\nimport Player from '../../lib/players/player';\nimport ScoreSummary from './scoreSummary';\n\nconst ons = require(\"onsenui\");\n\nclass GameNowView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.game = props.game;\n        this.state = {round: this.game.round, scoreUpdate: false, status: this.game.status, ranglistShow: false, dialogScoreEdit: false, windowChange: false};\n        this.dialogScoreEdit = {title: '', player: new Player(), round: 0};\n        this.dialogRepeat = {beginner: -1, playerNext: -1, roundNow: -1, repeat: false};\n        this.scoreTBody = React.createRef();\n        this.divSummary = React.createRef();\n        this.windowHeight = React.createRef();\n    }\n\n    handleMenuClick() {\n      document.querySelector('#menu').open();\n    }\n\n    handleNewScore() {\n        let score = this.game.gameType.storeScoreForm();\n        this.dialogScoreEdit.player.score[this.dialogScoreEdit.round] = score;\n        if(!this.game.gameType.isGameFinish(this.game.players.players)) {\n            this.game.status = \"RUNNING\";\n        }\n        this.game.store();\n        this.setState({status: this.game.status, scoreUpdate: true, dialogScoreEdit: false});\n        if(this.dialogRepeat.repeat) {\n            this.handleChangeScore(this.game.players.players[this.dialogRepeat.playerNext],this.dialogRepeat.roundNow);\n        }\n    }\n\n    handleChangeScore(player, round) {\n        this.dialogScoreEdit.title = player.name;\n        this.game.gameType.loadScoreForm(player, round);\n        this.dialogScoreEdit.player = player;\n        this.dialogScoreEdit.round = round;\n        let playerIndex = this.game.players.players.indexOf(player);\n        if(this.dialogRepeat.repeat) {\n            this.dialogRepeat.playerNext = this.game.players.nextPlayerIndexByIndex(playerIndex);\n            if(this.dialogRepeat.playerNext === this.dialogRepeat.beginner) {\n                this.dialogRepeat.repeat = false;\n            }\n        } else if(playerIndex === this.game.gameType.getBeginner(this.game.players.players, round)) {\n            this.dialogRepeat.repeat = true;\n            this.dialogRepeat.roundNow = round;\n            this.dialogRepeat.beginner = playerIndex;\n            this.dialogRepeat.playerNext = this.game.players.nextPlayerIndexByIndex(playerIndex);\n        }\n        this.setState({dialogScoreEdit: true});\n        this.game.gameType.focusScoreForm();\n    }\n\n    handleCloseScore() {\n        this.dialogRepeat.repeat = false;\n        this.setState({dialogScoreEdit: false});\n    }\n\n    handleRangList() {\n        this.setState({ranglistShow: true});\n    }\n\n    handleAddRound() {\n        if(this.game.gameType.isGameFinish(this.game.players.players)) {\n            this.game.finishing();\n            this.setState({status: this.game.status, ranglistShow: true});\n        } else {\n            this.game.status = \"RUNNING\";\n            for(let player of this.game.players.players) {\n                player.score.push(this.game.gameType.defaultScore());\n            }\n            this.game.round++;\n            this.game.store();\n            this.dialogRepeat.dealer = this.game.gameType.getDealer(this.game.players.players, this.game.round);\n            this.setState({round: this.game.round});\n        }\n    }\n\n    handleNewGame() {\n        this.game = this.game.gameType.repeatGame(this.game);\n        this.setState({round: this.game.round, scoreUpdate: false, status: this.game.status});\n    }\n\n    handleRanglistClose(event) {\n        if (!this.divSummary.current.contains(event.target)){\n            this.setState({ranglistShow: false});\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.updateDimensions.bind(this));\n        this.updateDimensions();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateDimensions.bind(this));\n    }\n\n    updateDimensions () {\n        this.setState({windowChange: true});\n        let height = this.windowHeight.current.scrollHeight;\n        let width = this.windowHeight.current.scrollWidth;\n        this.scoreTBody.current.style.height = (height-200)+\"px\";\n        if(ons.platform.isIPhoneX() && height > width) {\n            this.scoreTBody.current.style.height = (height-265)+\"px\";\n        }\n    }\n\n    renderScore() {\n        let render = [];\n        let renderLoop = [];\n        renderLoop.push(<th></th>)\n        for(let player of this.game.players.players) {\n            renderLoop.push(<th>{player.displayName()}</th>)\n        }\n        render.push(<thead><tr>{renderLoop}</tr></thead>);\n        let renderBody = [];\n        for(let i=0; i<this.game.round; i++) {\n            let j = 0;\n            renderLoop = [];\n            renderLoop.push(<td class=\"scoreTableHead\">{this.game.gameType.displayRound(i)}</td>);\n            for(let player of this.game.players.players) {\n                let styleClass = \"\";\n                if(this.game.gameType.isDealer(this.game.players.players, i, j)) {\n                    styleClass = \"dealer\";\n                }\n                renderLoop.push(<td class={styleClass} verticalAlign=\"center\" onClick={((e) => this.handleChangeScore(player, i))} >{this.game.gameType.displayScore(player.score[i])}</td>);\n                j++;\n            }\n            renderBody.push(<tr>{renderLoop}</tr>);\n        }\n        renderLoop = [];\n        renderLoop.push(<td class=\"scoreTableHead\" verticalAlign=\"center\">Gesamt</td>)\n        for(let player of this.game.players.players) {\n            renderLoop.push(<td class=\"scoreTableSum\" verticalAlign=\"center\">{this.game.gameType.displaySum(player)}</td>)\n        }\n        render.push(<tbody ref={this.scoreTBody}>{renderBody}<tr>{renderLoop}</tr></tbody>);\n        return render;\n    }\n\n    render() {\n        let roundButton = {};\n        if(this.game.status === \"FINISH\") {\n            roundButton = (\n                            <>\n                                <ToolbarButton onClick={this.handleNewGame.bind(this)}>\n                                    <Icon icon=\"md-replay\" size={32}></Icon>\n                                </ToolbarButton>\n                            </>\n                            );\n            \n        } else {\n            roundButton = (\n                            <>\n                                <ToolbarButton onClick={this.handleAddRound.bind(this)}>\n                                    <Icon icon=\"md-plus\" size={32}></Icon>\n                                </ToolbarButton>\n                            </>\n                            );\n        }\n        return (\n            <ons-page ref={this.windowHeight}>\n                <AlertDialog id=\"dialogNewScore\" modifier=\"rowfooter\" isOpen={this.state.dialogScoreEdit} onCancel={this.handleCloseScore.bind(this)}>\n                    <div className=\"alert-dialog-title\">Score: {this.dialogScoreEdit.title}</div>\n                    <div className=\"alert-dialog-content\">\n                        {this.game.gameType.displayScoreForm()}\n                    </div>\n                    <div class=\"alert-dialog-footer\">\n                        <button class=\"alert-dialog-button\" onClick={this.handleCloseScore.bind(this)}>Abbrechen</button>\n                        <button class=\"alert-dialog-button\" onClick={this.handleNewScore.bind(this)}>Ändern</button>\n                    </div>\n                </AlertDialog>\n                <Modal isOpen={this.state.ranglistShow} animation=\"fade\" onClick={this.handleRanglistClose.bind(this)}>\n                    <ScoreSummary game={this.game} refVar={this.divSummary}></ScoreSummary>\n                </Modal>\n                <Toolbar id=\"game-new-view-toolbar\">\n                    <div className=\"center\">Spiel: {this.game.name}</div>\n                    <div className=\"right\">\n                        <ToolbarButton onClick={this.handleMenuClick}>\n                            <Icon icon=\"md-menu\"></Icon>\n                        </ToolbarButton>\n                    </div>\n                </Toolbar>\n                <table className=\"scoreTable\">\n                    {this.renderScore()}\n                </table>\n                <BottomToolbar style={{textAlign: \"center\", paddingTop: \"5px\"}}>\n                    <div className=\"left\">\n                    </div>\n                    <div className=\"center\">\n                        <ToolbarButton onClick={this.handleRangList.bind(this)}>\n                            <Icon icon=\"fa-award\" size={25}></Icon>\n                        </ToolbarButton>\n                        {roundButton}\n                    </div>\n                    \n                </BottomToolbar>\n            </ons-page>\n        );\n    }\n}\n\nexport default GameNowView;","import Player from \"./player\";\nimport Store from \"../store/store\";\n\n\nclass Players {\n    constructor() {\n        this.players = [];\n    }\n\n    addPlayer(name) {\n        this.players.push(new Player(name));\n    }\n\n    nextPlayerIndexByIndex(indexNow) {\n        indexNow++;\n        if(this.players.length <= indexNow) {\n            indexNow = 0;\n        }\n        return indexNow;\n    }\n\n    nextPlayerByIndex(indexNow) {\n        return this.players[this.nextPlayerByIndex(indexNow)];\n    }\n\n    nextPlayerIndexByPlayer(player) {\n        let indexNow = this.players.indexOf(player);\n        return this.nextPlayerIndex(indexNow);\n    }\n\n    nextPlayerByPlayer(player) {\n        return this.players[this.nextPlayerIndexByPlayer(player)];\n    }\n\n    getPlayersFromStorage() {\n        let store = new Store(\"players\");\n        let players = [];\n        for(let player of store.restoreAll()) {\n            let playerInstance = new Player(player.name);\n            playerInstance.id = player.id;\n            playerInstance.scoreRangHistory = player.scoreRangHistory;\n            players.push(playerInstance);\n        }\n        return players;\n    }\n\n    getPlayerByName(name) {\n        let players = this.getPlayersFromStorage();\n        for(let player of players) {\n            if(player.name === name) {\n                return player;\n            }\n        }\n        return null;\n    }\n\n}\n\nexport default Players;","import GameGeneralMain from \"../gameTypes/general/main\";\nimport Players from \"../players/players\";\nimport GameTypes from \"../gameTypes/gameTypes\";\nimport Store from \"../store/store\";\n\nclass Game {\n    constructor() {\n        this.stored = false;\n        this.id = -1;\n        this.name = '';\n        this.round = 0;\n        this.start = new Date();\n        this.end = null;\n        this.status = \"UNKNOW\";\n        this.gameType = new GameGeneralMain();\n        this.players = new Players();\n    }\n\n    store() {\n        let storeObj = {};\n        storeObj.id = this.id;\n        storeObj.name = this.name;\n        storeObj.status = this.status;\n        storeObj.start = this.start;\n        storeObj.end = this.end;\n        storeObj.round = this.round;\n        storeObj.gameType = this.gameType.key;\n        storeObj.gameTypeSettings = this.gameType.getSettings();\n        storeObj.players = [];\n        for(let player of this.players.players) {\n            storeObj.players.push({id: player.id, score: player.score})\n        }\n        let store = new Store(\"games\");\n        this.id = store.store(storeObj);\n        this.stored = true;\n    }   \n    \n    restore() {\n        let store =  new Store(\"games\");\n        let game = store.restoreById(this.id);\n        if(Object.keys(game).length === 0) {\n            this.stored = false;\n            return false;\n        }\n        this.mapper(game);\n        return true;\n    }\n\n    mapper(game) {\n        this.name = game.name;\n        this.round = game.round;\n        this.status = game.status;\n        this.start = new Date(game.start);\n        this.end = (game.end === null ? null : new Date(game.end));\n        let gameTypes = new GameTypes();\n        this.gameType = gameTypes.getGameType(game.gameType);\n        this.gameType.setSettings(game.gameTypeSettings);\n        let players = new Players();\n        let i = 0;\n        for(let player of game.players) {\n            players.addPlayer(\"\");\n            players.players[i].id = player.id;\n            players.players[i].restore();\n            players.players[i].score = player.score;\n            i++;\n        }\n        this.players = players;\n    }\n    \n    finishing() {\n        if(this.end === null) {\n            this.status = \"FINISH\";\n            this.end = new Date();\n            let ranglist = this.gameType.getRanglist(this.players.players);\n            let i = 1;\n            for(let rang of ranglist) {\n                rang.player.scoreRangHistory.push({gameType: this.gameType.key, rang: i, ts: this.end});\n                rang.player.store();\n                i++;\n            }\n            this.store();\n        }\n    }\n\n}\n\nexport default Game;","import React from 'react';\nimport GameTypes from '../../lib/gameTypes/gameTypes';\nimport {Toolbar, ToolbarButton, Icon, List, ListHeader, ListItem, Input, Select, Button, AlertDialog, Toast} from 'react-onsenui';\nimport { ReactSortable } from \"react-sortablejs\";\nimport GameNowView from '../now/view';\nimport Game from '../../lib/game/game';\n\nclass GameNewView extends React.Component {\n    \n\n    constructor(props) {\n        super(props);\n        this.state = {name: '', player: 0, gameType: '', dialogPlayer: false, newPlayerName: '', editPlayer: false, notificationShow: false, errors: {}};\n        this.game = new Game();\n        this.game.status = \"CREATE\";\n        this.gameTypes = new GameTypes();\n        this.sort = React.createRef();\n        this.notification = (<div></div>);\n    }\n    \n    handleMenuClick() {\n      document.querySelector('#menu').open();\n    }\n\n    handlePlayersEdit() {\n        this.setState({editPlayer: !this.state.editPlayer});\n    }\n\n    handlePlayerDialog(event) {\n        this.setState({dialogPlayer: true});\n        document.getElementById(\"inputNewPlayerName\")._input.select();\n        \n    }\n\n    handleGameTypeSelect(event) {\n        this.game.gameType = this.gameTypes.getGameType(event.target.value);\n        this.setState({gameType: event.target.value});\n    }\n\n    handlePlayerAdd(event) {\n        if(this.state.newPlayerName !== \"\") {\n            let playerSearch = this.game.players.getPlayerByName(this.state.newPlayerName);\n            if(playerSearch === null) {\n                this.game.players.addPlayer(this.state.newPlayerName);\n                this.game.players.players[this.game.players.players.length-1].store();\n            } else {\n                this.game.players.players.push(playerSearch);\n            }\n            this.notification = (\n                <div>Spieler hinzugefügt</div>\n            );\n            this.setState({notificationShow: true, player: this.game.players.players.length, playerList: this.game.players.players, newPlayerName: \"\"});\n            this.timeout = setTimeout(function(context) {\n                context.setState({notificationShow: false});\n            }, 2000, this);\n        }\n    }\n\n    handlePlayerAddFromDB(player) {\n        this.game.players.players.push(player);\n        this.notification = (\n            <div>Spieler hinzugefügt</div>\n        );\n        this.setState({notificationShow: true, player: this.game.players.players.length, playerList: this.game.players.players, newPlayerName: \"\"});\n        this.timeout = setTimeout(function(context) {\n            context.setState({notificationShow: false});\n        }, 2000, this);\n    }\n\n    handlePlayerDelete(player) {\n        let index = this.game.players.players.indexOf(player);\n        if(index !== -1) {\n            this.game.players.players.splice(index, 1);\n        }\n        this.setState({player: this.game.players.players.length, playerList: this.game.players.players});\n    }\n\n    handleGameCreate() {\n        let errors = {};\n        if(this.state.name === \"\") {\n            errors.name = \"Kein Namen angeben\";\n        }\n        if(this.state.gameType === \"\") {\n            errors.gameType = \"Kein Spieltyp angeben\";\n        }\n        if(this.game.players.players.length === 0) {\n            errors.players = \"Keine Spieler angeben\";\n        }\n        // CHECK GAME OPTIONALS\n        this.game.gameType.storeSettings();\n        let errorsOptional = this.game.gameType.checkSettings();\n        errors = Object.assign({}, errors, errorsOptional);\n\n        // SAVE\n        if(Object.keys(errors).length === 0) {\n            this.game.name = this.state.name;\n            this.game.store();\n            this.props.navigator.pushPage({component: GameNowView, props: {game: this.game}});\n        } else {\n            let htmlErros = [];\n            for(let key in errors) {\n                htmlErros.push(<li>{errors[key]}</li>);\n            }\n            this.notification = (\n                <div>\n                    Es sind folgende Fehler aufgetreten:\n                    <ul>\n                        {htmlErros}\n                    </ul>\n                </div>\n            );\n            this.setState({errors: errors, notificationShow: true});\n            this.timeout = setTimeout(function(context) {\n                context.setState({notificationShow: false});\n            }, 5000, this);\n        }\n    }\n\n    componentDidMount() {\n        document.body._gestureDetector.dispose();\n        //this.sortable = Sortable.create(this.sort.current);\n    }\n\n    renderGameTypes() {\n        let gameTypes = this.gameTypes.availableGameTypes();\n        let render = [];\n        for(let gameTypeKey in gameTypes) {\n            render.push(<option value={gameTypeKey}>{gameTypes[gameTypeKey]}</option>)\n        }\n        return render;\n    }\n\n    renderOptionals() {\n        if(this.game) {\n            return this.game.gameType.displayCreateOptions();\n        }\n    }\n\n\n\n\n    renderPlayers() {\n        return (\n            <ReactSortable\n                list={this.game.players.players}\n                setList={newPlayers => {\n                    this.game.players.players = newPlayers;\n                    this.setState({player: this.game.players.players.length})\n                }}\n            >\n                {this.game.players.players.map(player => (\n                    <ListItem>\n                        <div className=\"left\"></div>\n                        <div className=\"center\">{player.name}</div>\n                        <div className=\"right\">{this.state.editPlayer ? <Icon icon=\"md-delete\" onClick={() => this.handlePlayerDelete(player)}></Icon> : ''}</div>\n                    </ListItem>\n                ))}\n            </ReactSortable>\n        );\n    }\n\n    renderPlayerList() {\n        let render = \"\";\n        if(this.state.newPlayerName.length > 1) {\n            let players = this.game.players.getPlayersFromStorage();\n            if(players.length > 0) {\n                let list = [];\n                for(let player of players) {\n                    let found = true;\n                    for(let i = 0; i< this.state.newPlayerName.length; i++) {\n                        if(this.state.newPlayerName.charAt(i) !== player.name.charAt(i)) {\n                            found = false;\n                            break;\n                        }\n                    \n                    }\n                    if(found) {\n                        list.push(\n                            <ListItem onClick={() => this.handlePlayerAddFromDB(player)}>\n                                {player.name}\n                            </ListItem>\n                        );\n                    }\n                }\n\n                if(list.length) {\n                    render = (\n                        <List>\n                            <ListHeader>\n                                gefundene Spieler\n                            </ListHeader>\n                            {list}\n                        </List>\n                    );\n                }                \n            }\n        }\n        return render;\n    }\n\n    render() {\n        return (\n            <ons-page>\n                <Toast isOpen={this.state.notificationShow} animation=\"lift\">\n                    {this.notification}\n                </Toast>\n                <AlertDialog id=\"dialogAddPlayer\" modifier=\"rowfooter\" isOpen={this.state.dialogPlayer} onCancel={() => this.setState({dialogPlayer: false})}>\n                    <div className=\"alert-dialog-title\">Neuen Spieler erstellen</div>\n                    <div className=\"alert-dialog-content\">\n                        <Input  id=\"inputNewPlayerName\"\n                                value={this.state.newPlayerName} string\n                                onChange={(event) => { this.setState({newPlayerName: event.target.value})} }\n                                placeholder='Spielername' />\n                        <div className=\"playerList\">\n                            {this.renderPlayerList()}\n                        </div>\n                    </div>\n                    <div class=\"alert-dialog-footer\">\n                        <button class=\"alert-dialog-button\" onClick={() => this.setState({dialogPlayer: false})}>Abbrechen</button>\n                        <button class=\"alert-dialog-button\" onClick={this.handlePlayerAdd.bind(this)}>Hinzufügen</button>\n                    </div>\n                </AlertDialog>\n                <Toolbar id=\"game-new-view-toolbar\">\n                    <div className=\"center\">Neues Spiel erstellen</div>\n                    <div className=\"right\">\n                        <ToolbarButton onClick={this.handleMenuClick}>\n                            <Icon icon=\"md-menu\"></Icon>\n                        </ToolbarButton>\n                    </div>\n                </Toolbar>\n                <List id=\"new-form-list\">\n                    <ListHeader style={{fontSize: 15}}>Allgemein</ListHeader>\n                    <ListItem>\n                        <div className=\"center\">\n                            <label style={{paddingRight: '10px', width: '35%', textAlign: 'left', fontWeight: 'bold'}}>Name: </label>\n                            <Input \n                                className={(('name' in this.state.errors) ? 'inputError' : '')}\n                                style={{width: '60%'}}\n                                value={this.state.name} string\n                                onChange={(event) => { this.setState({name: event.target.value})} } />\n                        </div>\n                    </ListItem>\n                    <ListItem>\n                        <div className=\"center\" style={{width: '80%'}}>\n                            <label style={{paddingRight: '10px', width: '35%', textAlign: 'left', fontWeight: 'bold'}}>Spiel: </label>\n                            <Select\n                                className={(('gameType' in this.state.errors) ? 'inputError' : '')}\n                                style={{width: '60%'}}\n                                value={this.state.gameType}\n                                onChange={this.handleGameTypeSelect.bind(this)}>\n                                {this.renderGameTypes()}\n                            </Select>\n                        </div>\n                    </ListItem>\n                    {this.renderOptionals()}\n                    <ListHeader style={{fontSize: 15, height: \"30px\"}} className={(('players' in this.state.errors) ? 'inputError' : '')}>\n                        <div style={{float: \"left\"}}>\n                            Spieler\n                        </div>\n                        <div style={{float: \"right\", padding: \"5px 10px 0 0\"}}>\n                            <Icon icon=\"md-edit\" size={24} onClick={this.handlePlayersEdit.bind(this)}></Icon>\n                        </div>\n                    </ListHeader>\n                    {this.renderPlayers()}\n                    <ListItem>\n                        <div className=\"center\">\n                            <Button modifier=\"quiet\"\n                                onClick={this.handlePlayerDialog.bind(this)}>\n                                    Neuen Spieler hinzufügen\n                            </Button>\n                        </div>\n                    </ListItem>\n                </List>\n                <div style={{textAlign: \"center\", paddingTop: \"10px\"}}>\n                    <Button onClick={this.handleGameCreate.bind(this)}>Spiel starten</Button>\n                </div>\n            </ons-page>\n        );\n    }\n}\n\nexport default GameNewView;\n","import React from 'react';\nimport GameNewView from './view';\nimport {Button} from 'react-onsenui';\n\nclass GameNewCreate extends React.Component {\n    handleOnClick() {\n        this.props.page.props.navigator.pushPage({component: GameNewView});\n\n    }\n    render() {\n        return (\n            <Button onClick={this.handleOnClick.bind(this)}>\n                Neues Spiel starten\n            </Button>\n        );\n    }\n}\n\nexport default GameNewCreate;\n","import Store from \"../store/store\";\nimport Game from \"./game\";\n\n\n\nclass Games {\n\n    constructor() {\n        this.games = this.loadAllGames();\n    }\n\n    deleteById(id) {\n        let store = new Store(\"games\");\n        if(store.deleteById(id)) {\n            this.loadAllGames();\n            return true;\n        }\n    }\n\n    loadAllGames() {\n        this.games = [];\n        let store = new Store(\"games\");\n        for(let game of store.restoreAll().reverse()) {\n            let gameInstance = new Game();\n            gameInstance.id = game.id;\n            gameInstance.mapper(game);\n            this.games.push(gameInstance);\n        }\n        return this.games;\n    }\n}\n\nexport default Games;","import React from 'react';\nimport {Toolbar, ToolbarButton, Icon, List, ListHeader, ListItem, Button} from 'react-onsenui';\nimport Games from '../../lib/game/games';\nimport GameNowView from '../now/view';\n\n\n\nclass GameAllView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.games = new Games();\n        this.state = {editGames: false, gamesCnt: this.games.games.length};\n    }\n    \n    handleMenuClick() {\n      document.querySelector('#menu').open();\n    }\n\n    handleViewGame(e, game) {\n        this.props.navigator.pushPage({component: GameNowView, props: {game: game}});\n        \n    }\n\n    formateDate(date) {\n        if(date === null) {\n            return;\n        }\n        function addZero(number) {\n            if(number < 10) {\n                return \"0\"+number;\n            }\n            return number;\n        }\n        return addZero(date.getDate())+\".\"+addZero(date.getMonth()+1)+\".\"+date.getFullYear()+\" - \"+addZero(date.getHours())+\":\"+addZero(date.getMinutes());\n    }\n\n    renderGames() {\n        let render = [];\n        let listItemsNew = [];\n        let listItemsRun = [];\n        let listItemsFinish = [];\n        for(let game of this.games.games) {\n            let entry = (\n\n                <ListItem modifier={!this.state.editGames ? \"chevron\" : \"\"} tappable onClick={((e) => !this.state.editGames ? this.handleViewGame(e, game) : '')}>\n                    <div className=\"center\">\n                        <span class=\"list-item__title\">{game.name}</span>\n                        <span class=\"list-item__subtitle\">\n                            {game.end === null ? \"erstellt am: \"+this.formateDate(game.start) : \"gespielt am: \"+this.formateDate(game.end)} \n                            <br />\n                            Spieltype: {game.gameType.name}\n                            &nbsp;|\n                            Runde: {game.round}\n                            <br /> \n                            Spieleranzahl: {game.players.players.length}\n                        </span>\n                    </div> \n                    <div className=\"right\">\n                    {this.state.editGames ? <Button style={{background: \"#c20606\"}} onClick={function() {this.games.deleteById(game.id); this.setState({gamesCnt: this.games.games.length-1})}.bind(this)}><Icon icon=\"md-delete\" size={24}></Icon></Button> : \"\"}\n                    </div>           \n                </ListItem>\n            );\n            switch(game.status) {\n                default:\n                    listItemsNew.push(entry);\n                    break;\n                case \"RUNNING\":\n                    listItemsRun.push(entry);\n                    break;\n                case \"FINISH\":\n                    listItemsFinish.push(entry);\n                    break;\n            }\n        }\n\n        if(listItemsNew.length > 0) {\n            render.push(<ListHeader>Neu erstellte Spiele</ListHeader>);\n            render = render.concat(listItemsNew);\n        }\n\n        if(listItemsRun.length > 0) {\n            render.push(<ListHeader>Laufende Spiele</ListHeader>);\n            render = render.concat(listItemsRun);\n        }\n        \n        if(listItemsFinish.length > 0) {\n            render.push(<ListHeader>Abgeschlossene Spiele</ListHeader>);\n            render = render.concat(listItemsFinish);\n        }\n        \n        return (render);\n    }\n\n    render() {\n        return (\n            <ons-page>\n                <Toolbar id=\"game-all-view-toolbar\">\n                    <div className=\"left\">\n                        <ToolbarButton onClick={() => this.setState({editGames: !this.state.editGames})}>\n                            <Icon icon=\"md-edit\"></Icon>\n                        </ToolbarButton>\n                    </div>\n                    <div className=\"center\">Alle Spiele</div>\n                    <div className=\"right\">\n                        <ToolbarButton onClick={this.handleMenuClick}>\n                            <Icon icon=\"md-menu\"></Icon>\n                        </ToolbarButton>\n                    </div>\n                </Toolbar>\n                <List id=\"new-form-list\">\n                    {this.renderGames()}\n                </List>\n            </ons-page>\n        );\n    }\n}\n\nexport default GameAllView;","import React from 'react';\nimport {Button} from 'react-onsenui';\nimport GameAllView from './view';\n\nclass GameAllOpen extends React.Component {\n    handleOnClick() {\n        this.props.page.props.navigator.pushPage({component: GameAllView});\n\n    }\n    render() {\n        return (\n            <Button onClick={this.handleOnClick.bind(this)}>\n                Alle Spiele anzeigen\n            </Button>\n        );\n    }\n}\n\nexport default GameAllOpen;","import Games from \"../game/games\";\n\nclass History {\n\n    constructor() {\n        this.games = new Games();\n        this.games.loadAllGames();\n    }\n\n    ranglistByTimerange(start, end) {\n        return this.ranglistByTimerangeAndGametype(start, end, null);\n    }\n\n    ranglistByTimerangeAndGametype(start, end, gametype) {\n        let ranglists = [];\n        for(let game of this.games.games) {\n            if(game.status === \"FINISH\") {\n                if(gametype === null || game.gameType.key === gametype) {\n                    if(game.end >= start && (game.end <= end || end == null)) {\n                        ranglists.push(game.gameType.getRanglist(game.players.players));\n                    }\n                }\n            }\n        }\n        return this._sortWinners(this._parseWinners(ranglists))\n    }\n\n    _parseWinners(ranglists) {\n        let winners = [];\n        for(let ranglist of ranglists) {\n            let winnerFound = false;\n            for(let i = 0; i<winners.length; i++) {\n                if(winners[i].player.id === ranglist[0].player.id) {\n                    winners[i].cnt++\n                    winnerFound = true;\n                    break;\n                }\n            }\n            if(!winnerFound) {\n                winners.push({player: ranglist[0].player, cnt: 1});\n            }\n        }\n        return winners;\n    }\n\n    _sortWinners(winners) {\n        let bestlist = [];\n        for(let winner of winners) {\n            let i = 0;\n            while(i < bestlist.length) {\n                if(bestlist[i].cnt < winner.cnt) {\n                    break;\n                }\n                i++;\n            }\n            bestlist.splice(i, 0, winner);\n        }\n\n        return bestlist;\n    }\n}\n\nexport default History;","import React from 'react';\n\nimport {Toolbar, ToolbarButton, Icon, List, ListHeader, ListItem, Input, Select, Button} from 'react-onsenui';\nimport DatePicker from 'react-datepicker';\n\nimport Players from '../../lib/players/players';\nimport GameTypes from '../../lib/gameTypes/gameTypes';\nimport History from '../../lib/history/history';\n\nclass PlayerBestlistView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {filterGameType: '', filterStart: null, filterEnd: null};\n        this.gameTypes = new GameTypes();\n        this.history = new History();\n        this.inputFilterStart = React.createRef();\n        this.inputFilterEnd = React.createRef();\n    }\n\n    handleMenuClick() {\n        document.querySelector('#menu').open();\n    }\n\n    handleGameTypeSelect(event) {\n        console.log(this);\n        console.log(event.target.value);\n        this.setState({filterGameType: event.target.value});\n        //this.setState({filterGameType: event.target.value});\n    }\n\n    arrangePlayer(players) {\n        let arrangedPlayers = {};\n        for(let player of players) {\n            for(let gameType of player.getPlayedGameTypes()) {\n                if(!(gameType in arrangedPlayers)) {\n                    arrangedPlayers[gameType] = [];\n                }\n                let rangFirst = 0;\n                for(let rang of player.getRangsByGameTypeKey(gameType)) {\n                    if(rang === 1) {\n                        rangFirst++;\n                    }\n                }\n                let i = 0;\n                for(let checkPlayer of arrangedPlayers[gameType]) {\n                    if(checkPlayer.cnt < rangFirst) {\n                        break;\n                    }\n                    i++;\n                }\n                arrangedPlayers[gameType].splice(i, 0, {player: player, cnt: rangFirst});\n            }\n        }\n        return arrangedPlayers;\n    }\n\n    formateDate(date) {\n        if(date === null) {\n            return;\n        }\n        function addZero(number) {\n            if(number < 10) {\n                return \"0\"+number;\n            }\n            return number;\n        }\n        return addZero(date.getDate())+\".\"+addZero(date.getMonth()+1)+\".\"+date.getFullYear()+\" - \"+addZero(date.getHours())+\":\"+addZero(date.getMinutes());\n    }\n\n    renderPlayers() {\n        let render = [];\n        if(this.state.filterGameType !== '') {\n            let data = this.history.ranglistByTimerangeAndGametype(this.state.filterStart, this.state.filterEnd, this.state.filterGameType);\n            for(let rang = 0; rang<data.length; rang++) {\n                render.push(\n                    <ListItem>\n                        <div className=\"left\"></div>\n                        <div className=\"center\">{(rang+1)+\". \"+data[rang].player.name+\" (\"+data[rang].cnt+\")\"}</div>\n                        <div className=\"right\"></div>\n                    </ListItem>\n                );\n            }\n        } else {\n            let players = new Players();\n            let gameTypes = new GameTypes();\n            let playersHistory = this.arrangePlayer(players.getPlayersFromStorage());\n            for(let gameType in playersHistory) {\n                render.push(<ListHeader>{gameTypes.getGameType(gameType).name}</ListHeader>);\n                for(let rang = 0; rang<playersHistory[gameType].length; rang++) {\n                    render.push(\n                        <ListItem>\n                            <div className=\"left\"></div>\n                            <div className=\"center\">{(rang+1)+\". \"+playersHistory[gameType][rang].player.name+\" (\"+playersHistory[gameType][rang].cnt+\")\"}</div>\n                            <div className=\"right\"></div>\n                        </ListItem>\n                    );\n                }\n            }\n        }\n        \n        if(render.length === 0) {\n            render.push(\n                <ListItem>\n                     <div className=\"left\"></div>\n                    <div className=\"center\">Keine Bestenliste gefunden!</div>\n                    <div className=\"right\"></div>\n                </ListItem>\n            );\n        }\n        return (\n            <List modifier=\"inset\">\n                {render}\n            </List>\n        );\n    }\n\n    renderFilterSettings() {\n        let gameTypes = this.gameTypes.availableGameTypes();\n        let renderTypes = [];\n        for(let gameTypeKey in gameTypes) {\n            renderTypes.push(<option value={gameTypeKey}>{gameTypes[gameTypeKey]}</option>)\n        }\n\n        let DateButton = ({ value, onClick }) => (\n            <Button onClick={onClick}>\n                <Icon icon=\"md-calendar\" size={24}></Icon>\n            </Button>\n          );\n\n        return (\n            <>\n                <ListItem>\n                    <div className=\"center\">\n                        <label>Gametype: </label>\n                        <Select\n                                value={this.state.filterGameType}\n                                onChange={this.handleGameTypeSelect.bind(this)}>\n                                {renderTypes}\n                        </Select>\n                    </div>\n                </ListItem>\n                <ListItem>\n                    <label>Start: </label>\n                    <Input readonly onClick={() => this.inputFilterStart.current.setOpen(true)} value={this.formateDate(this.state.filterStart)}></Input>\n                    <DatePicker showTimeSelect \n                        ref={this.inputFilterStart}\n                        selected={this.state.filterStart} \n                        maxDate={new Date()} \n                        onChange={date => {console.log(this); this.setState({filterStart: new Date(date)})}}\n                        dateFormat=\"dd/MM/yyyy - hh:mm\"\n                        customInput={<DateButton />}\n                        withPortal\n                    />\n                </ListItem>\n                <ListItem>\n                    <label>Ende: </label>\n                    <Input readonly onClick={() => this.inputFilterEnd.current.setOpen(true)} value={this.formateDate(this.state.filterEnd)}></Input>\n                    <DatePicker showTimeSelect \n                        ref={this.inputFilterEnd}\n                        selected={this.state.filterEnd} \n                        maxDate={new Date()} \n                        onChange={date => this.setState({filterEnd: new Date(date)})}\n                        dateFormat=\"dd/MM/yyyy - hh:mm\"\n                        customInput={<DateButton />}\n                        withPortal\n                    />\n                </ListItem>\n            </>\n        );\n    }\n\n    render () {\n        return (\n            <ons-page>\n                <Toolbar id=\"game-all-view-toolbar\">\n                    <div className=\"center\">Bestenliste</div>\n                    <div className=\"right\">\n                        <ToolbarButton onClick={this.handleMenuClick}>\n                            <Icon icon=\"md-menu\"></Icon>\n                        </ToolbarButton>\n                    </div>\n                </Toolbar>\n                <List>\n                    <ListHeader>Filter</ListHeader>\n                    {this.renderFilterSettings()}\n                    <ListHeader>Ergebnis</ListHeader>\n                </List>\n                <br />\n                {this.renderPlayers()}\n            </ons-page>\n        );\n    }\n}\n\nexport default PlayerBestlistView;\n\n\n\n","import React from 'react';\nimport {Button} from 'react-onsenui';\nimport PlayerBestlistView from './view';\n\nclass PlayerBestlistOpen extends React.Component {\n    handleOnClick() {\n        this.props.page.props.navigator.pushPage({component: PlayerBestlistView});\n\n    }\n    render() {\n        return (\n            <Button onClick={this.handleOnClick.bind(this)}>\n                Bestenliste öffnen\n            </Button>\n        );\n    }\n}\n\nexport default PlayerBestlistOpen;","import React from 'react';\n\nimport GameNewCreate from '../game/new/create';\nimport GameAllOpen from '../game/all/open';\nimport PlayerBestlistOpen from '../player/bestlist/open';\n\nimport {Toolbar, ToolbarButton, Icon} from 'react-onsenui';\n\nclass MainView extends React.Component {\n    handleMenuClick() {\n        document.querySelector('#menu').open();\n    }\n    render() {\n        return (\n            <ons-page> \n                <Toolbar>\n                    <div className=\"center\">Willkommen</div>\n                    <div className=\"right\">\n                        <ToolbarButton onClick={this.handleMenuClick}>\n                            <Icon icon=\"md-menu\"></Icon>\n                        </ToolbarButton>\n                    </div>\n                </Toolbar>\n                    <div style={{textAlign: 'center', marginTop: '150px'}}>\n                    <GameNewCreate page={this} />\n                    <div style={{marginTop: '30px'}}></div>\n                    <GameAllOpen page={this} />\n                    <div style={{marginTop: '30px'}}></div>\n                    <PlayerBestlistOpen page={this} />\n                </div>\n            </ons-page>\n        )\n    }\n}\n\nexport default MainView;","import React from 'react';\nimport './App.css';\n\nimport {Splitter, SplitterSide, SplitterContent, Navigator, List, ListHeader, ListItem, Icon} from 'react-onsenui';\n\nimport packageJson from '../package.json';\nimport buildNumber from './buildnumber.json';\n\nimport MainView from './main/view';\nimport GameAllView from './game/all/view';\nimport GameNewView from './game/new/view';\nimport PlayerBestlistView from './player/bestlist/view';\n\nconst ons = require(\"onsenui\");\n\nclass App extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.navigator = {};\n  }\n\n  handleNewGame() {\n    document.querySelector('#menu').close();\n    this.navigator.pushPage({component: GameNewView});\n  }\n\n  handeNowGame() {\n    \n  }\n\n  handleMenu(component) {\n    document.querySelector('#menu').close();\n    this.navigator.pushPage({component: component});\n  }\n\n  handleAllGame() {\n    document.querySelector('#menu').close();\n    this.navigator.pushPage({component: GameAllView});\n  }\n\n\n  renderPage(route, navigator) {\n    const props = route.props || {};\n    props.navigator = this.navigator = navigator;\n\n    return React.createElement(route.component, props);\n  }\n\n  componentWillMount() {\n    const html = document.documentElement;\n    if (ons.platform.isIPhoneX()) {\n      html.setAttribute('onsflag-iphonex-portrait', '');\n      html.setAttribute('onsflag-iphonex-landscape', '');\n    }\n  }\n  \n\n  render() {\n    return (\n      <Splitter>\n        <SplitterSide\n          side=\"right\"\n          //width={window.innerWidth > 400 ? '300px' : '100%'}\n          width='250px'\n          id=\"menu\" \n          collapse>\n            <ons-page>\n              <List>\n                <ListHeader>\n                  Hauptmenü\n                </ListHeader>\n                <ListItem modifier=\"chevron\" tappable onClick={() => this.handleMenu(GameNewView)}>\n                  <div className=\"left\">\n                    <Icon icon=\"md-file-plus\"></Icon>\n                  </div>\n                  <div className=\"center\">Neues Spiel starten</div>\n                </ListItem>\n                <ListItem modifier=\"chevron\" tappable onClick={() => this.handleMenu(GameAllView)}>\n                  <div className=\"left\">\n                    <Icon icon=\"md-view-list-alt\"></Icon>\n                  </div>\n                  <div className=\"center\">Alle Spiele anzeigen</div>\n                </ListItem>\n                <ListItem modifier=\"chevron\" tappable onClick={() => this.handleMenu(PlayerBestlistView)}>\n                  <div className=\"left\">\n                    <Icon icon=\"md-equalizer\"></Icon>\n                  </div>\n                  <div className=\"center\">Bestenliste</div>\n                </ListItem>\n              </List>\n              <div className=\"menuVersion\">\n                Version: {packageJson.version} #{buildNumber.build}\n              </div>\n            </ons-page>\n        </SplitterSide>\n        <SplitterContent>\n          <Navigator id=\"navigator\"\n            initialRoute={{component: MainView}} \n            renderPage={this.renderPage.bind(this)}\n            />\n        </SplitterContent>\n      </Splitter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport StoreUpdater from './lib/store/updater';\n\n\nnew StoreUpdater();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import Store from \"./store\";\n\nimport packageJson from '../../../package.json';\nimport buildNumber from '../../buildnumber.json';\n\n\nclass StoreUpdater {\n    constructor() {\n        this.storeVersion = new Store(\"settings\");\n        let data = this.storeVersion.restoreAll();\n        if(data.length === 1) {\n            if(packageJson.version !== data.version || buildNumber.build !== data.build) {\n                // TODO: Check if update method exists\n                this.storeVersion.store({id: 0, version: packageJson.version, build: buildNumber.build});\n            }\n        } else {\n            this.init();\n        }\n    }\n    init() {\n        this.storeVersion.store({id: -1, version: packageJson.version, build: buildNumber.build});\n    }\n    \n}\n\nexport default StoreUpdater;"],"sourceRoot":""}